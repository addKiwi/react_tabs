{"version":3,"sources":["TabsControl/TabsControl.tsx","Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["TabsControl","React","memo","tabs","selectedId","selectTab","className","map","tab","type","onClick","id","cn","button_selected","title","Tabs","find","content","App","useState","selectedTabId","setSelectedTabId","useCallback","newTabId","ReactDOM","render","document","getElementById"],"mappings":"8PAUaA,EAA+BC,IAAMC,MAChD,YAAsC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UACnB,OACE,oBAAIC,UAAU,OAAd,SAEIH,EAAKI,KAAI,SAAAC,GAAG,OACV,oBAEEF,UAAU,MAFZ,SAIE,wBACEG,KAAK,SACLC,QAAS,kBAAML,EAAUG,EAAIG,KAC7BL,UAAWM,IAAG,SAAU,CAAEC,gBAAiBL,EAAIG,KAAOP,IAHxD,SAKGI,EAAIM,SARFN,EAAIG,YCNVI,G,MAAwBd,IAAMC,MAAK,YAAsC,IAAD,EAAlCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UACnE,OACE,qCACE,cAAC,EAAD,CACEF,KAAMA,EACNC,WAAYA,EACZC,UAAWA,IAEb,mBAAGC,UAAU,OAAb,mBACGH,EAAKa,MAAK,SAAAR,GAAG,OAAIA,EAAIG,KAAOP,YAD/B,aACG,EAAyCa,iBCf5Cd,EAAc,CAClB,CAAEQ,GAAI,QAASG,MAAO,QAASG,QAAS,eACxC,CAAEN,GAAI,QAASG,MAAO,QAASG,QAAS,eACxC,CAAEN,GAAI,QAASG,MAAO,QAASG,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAAShB,EAAK,GAAGQ,IAA3D,mBAAOS,EAAP,KAAsBC,EAAtB,KAEMhB,EAAYiB,uBAAY,SAACC,GAAD,OAC5BF,EAAiBE,KAChB,IAEH,OACE,sBAAKjB,UAAU,MAAf,UACE,+DAEGH,EAAKa,MAAK,SAAAR,GAAG,OAAIA,EAAIG,KAAOS,YAF/B,aAEG,EAA4CH,WAE/C,cAAC,EAAD,CACEd,KAAMA,EACNC,WAAYgB,EACZf,UAAWA,QCxBnBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.99c068fc.chunk.js","sourcesContent":["import React from 'react';\nimport './TabsControl.scss';\nimport cn from 'classnames';\n\ninterface Props {\n  tabs: Tab[],\n  selectedId: string,\n  selectTab: (newTab: string) => void,\n}\n\nexport const TabsControl: React.FC<Props> = React.memo(\n  ({ tabs, selectedId, selectTab }) => {\n    return (\n      <ul className=\"list\">\n        {\n          tabs.map(tab => (\n            <li\n              key={tab.id}\n              className=\"tab\"\n            >\n              <button\n                type=\"button\"\n                onClick={() => selectTab(tab.id)}\n                className={cn('button', { button_selected: tab.id === selectedId })}\n              >\n                {tab.title}\n              </button>\n            </li>\n          ))\n        }\n      </ul>\n    );\n  },\n);\n","import React from 'react';\nimport { TabsControl } from '../TabsControl/TabsControl';\n\nimport './Tabs.scss';\n\ninterface Props {\n  tabs: Tab[],\n  selectedId: string,\n  selectTab: (newTab: string) => void,\n}\n\nexport const Tabs: React.FC<Props> = React.memo(({ tabs, selectedId, selectTab }) => {\n  return (\n    <>\n      <TabsControl\n        tabs={tabs}\n        selectedId={selectedId}\n        selectTab={selectTab}\n      />\n      <p className=\"text\">\n        {tabs.find(tab => tab.id === selectedId)?.content}\n      </p>\n    </>\n  );\n});\n","import React, { useCallback, useState } from 'react';\n\nimport './App.scss';\nimport { Tabs } from './Tabs/Tabs';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectTab = useCallback((newTabId: string) => (\n    setSelectedTabId(newTabId)\n  ), []);\n\n  return (\n    <div className=\"App\">\n      <h1>\n        Selected tab is&nbsp;\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedId={selectedTabId}\n        selectTab={selectTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}